apiVersion: apps/v1
kind: Deployment
metadata:
  name: local-confluent-kafka-cp-kafka-rest
  labels:
    app: cp-kafka-rest
    chart: cp-kafka-rest-0.1.0
    release: local-confluent-kafka
    heritage: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cp-kafka-rest
      release: local-confluent-kafka
  template:
    metadata:
      labels:
        app: cp-kafka-rest
        release: local-confluent-kafka
    spec:
      containers:
        - name: cp-kafka-rest-server
          image: "confluentinc/cp-kafka-rest:7.2.2"
          imagePullPolicy: "IfNotPresent"
          ports:
            - name: rest-proxy
              containerPort: 8082
              protocol: TCP
          resources:
            {}
          env:
            - name: KAFKA_REST_HOST_NAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: KAFKA_REST_BOOTSTRAP_SERVERS
              value: PLAINTEXT://local-confluent-kafka-cp-kafka:9092
            - name: KAFKA_REST_ZOOKEEPER_CONNECT
              value: local-confluent-kafka-cp-zookeeper:2181
            - name: KAFKA_REST_SCHEMA_REGISTRY_URL
              value: http://local-confluent-kafka-cp-schema-registry:8081
            - name: KAFKA_REST_LOG4J_ROOT_LOGLEVEL
              value: "true"
            - name: KAFKA_REST_LOG4J_LOGGERS
              value: "true"